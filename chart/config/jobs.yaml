# This configuration tree associates feature flag conditions with jobs
# in instance groups. It further allows the specification of the
# processes of a job, for jobs where job and process names differ from
# each other, and jobs with more than one process.
#
# Syntax: See `chart/values.schema.yaml`
#
# NOTE: Missing instance groups and/or jobs are filled using data from
#  	the cf-deployment manifest.
#
#	Missing instance groups are added with `'$default': true`.
#	Instance groups without '$default' are extended with `'$default': true`.
#	Missing jobs are added with nil condition -> This invokes the '$default'
#
#	This is all handled by `_jobs.update` in `chart/templates/_jobs.tpl`.
#
# NOTE 2: The `as*` groups are for autoscaler. As they do not exist
# 	  in cf-deployment the auto-fill will not work for them. Thus
# 	  them being listed in full.
#
# The information from here is used by the helm templating creating
# ops instructions from the memory configuration for jobs to determine
# which jobs to ignore in the current deployment, in a generic
# manner. I.e not mixed into the templating code itself.
#
# All relevant supporting and using files are
#
# - chart/config/jobs.yaml			Self
# - chart/config/memory.yaml			Memory configuration
# - chart/operations/memory-limits.yaml		Transform memory config to ops
# - chart/templates/_jobs.tpl			Take self and complete/resolve
# - chart/templates/_memory.tpl			Take memory and complete
# - chart/templates/bosh_deployment.yaml	Reference the new config map
# - chart/templates/ops.yaml			Wrap `memory-limits.yaml` into config map
# - chart/values.schema.yaml			Job, memory config structure spec

# # ## ### ###### ######## ############# #####################

# Some cf-deployment jobs are moved to different instance groups; the job name remains unchanged.
move_jobs:
  api:
    routing-api: routing-api
  scheduler:
    auctioneer: auctioneer
  doppler:
    log-cache: log-cache
    log-cache-gateway: log-cache
    log-cache-nozzle: log-cache
    log-cache-cf-auth-proxy: log-cache
    route_registrar: log-cache

# Include default settings for `number_of_worker` properties because
# they are not set in cf-deployment, and spec files are not available
# to the helm chart.
properties:
  api:
    cloud_controller_ng:
      cc:
        jobs:
          local:
            number_of_workers: 2
  cc-worker:
    cloud_controller_worker:
      cc:
        jobs:
          generic:
            number_of_workers: 1

# Definition of all addons; jobs and processes will be filled in by _jobs.update.
# Format is the same as the `jobs` tree. Addons can be disabled by setting their
# `condition` to `false`.
addon_jobs:
  bosh-dns-aliases:
    '$default': false
  bpm:
    '$default': false
  metrics-agent:
    '$default': false
  metrics-discovery-registrar:
    '$default': false

jobs:
  asactors:
    '$default': 'features.autoscaler.enabled'
    operator: ~
    scalingengine: ~
    scheduler: ~
  asapi:
    '$default': 'features.autoscaler.enabled'
    golangapiserver: ~
    metricsforwarder: ~
    route_registrar: ~
  asdatabase:
    postgres: 'features.autoscaler.enabled && !features.autoscaler.mysql.enabled'
  asmetrics:
    '$default': 'features.autoscaler.enabled'
    eventgenerator: ~
    metricsserver: ~
  asnozzle:
    metricsgateway: 'features.autoscaler.enabled'
  api:
    '$default': true
    cloud_controller_ng:
      # "local-worker-N" processes will be appended by _jobs.update
      # Number of local worker processes is:
      # properties.api.cloud_controller_ng.cc.jobs.local.number_of_workers
      processes: [cloud_controller_ng, nginx, ccng_monit_http_healthcheck]
    routing-api: 'features.routing_api.enabled'
  cc-worker:
    cloud_controller_worker:
      # "worker-N" processes will be appended by _jobs.update
      # Number of local worker processes is:
      # properties.cc-worker.cloud_controller_worker.cc.jobs.generic.number_of_workers
      processes: []
  credhub:
    '$default': 'features.credhub.enabled'
    # Added via ops in assets/operations/instance_groups/credhub.yaml
    route_registrar: ~
    cf-cli-7-linux:
      processes: [credhub-internal-security-group-setup]
  database:
    # database instance group is replaced by native release
    '$default': false
  diego-api:
    cfdot:
      processes: []
  diego-cell:
    '$default': '!features.eirini.enabled && !features.multiple_cluster_mode.control_plane.enabled'
    bosh-dns-adapter: false
    cfdot:
      processes: []
    garden-cni:
      processes: []
    silk-cni:
      processes: []
  scheduler:
    '$default': true
    auctioneer: '!features.eirini.enabled'
    cfdot:
      processes: []
    ssh_proxy: '!features.eirini.enabled'
    tps:
      condition: '!features.eirini.enabled'
      processes: [watcher]
  smoke-tests:
    cf-cli-7-linux:
      processes: []
  singleton-blobstore:
    '$default': '!features.external_blobstore.enabled'
    blobstore:
      processes: [nginx, url_signer]
  tcp-router:
    '$default': 'features.routing_api.enabled'
  rotate-cc-database-key:
    rotate_cc_database_key:
      processes: [rotate]
  uaa:
    # Added via ops in assets/operations/instance_groups/uaa.yaml
    cf-cli-7-linux:
      processes: [uaa-internal-security-group-setup]
