{{- $_ := include "_config.load" $ }}
{{- if .Values.testing.brain_tests.enabled }}

# Service account, roles, and cluster role for the brain tests.
# Raw kube objects going into the chart.

# Service account "tests-brain" is used by the instance group "acceptance-tests-brain"
---
apiVersion: "v1"
kind: "ServiceAccount"
metadata:
  name: tests-brain
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/component: "{{ .Release.Name }}-tests-brain"
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/name: {{ include "kubecf.fullname" . }}
    app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    helm.sh/chart: {{ include "kubecf.chart" . }}

# Role "test-role-brain" only used by account "tests-brain"
---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "Role"
metadata:
  name: test-role-brain
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/component: "{{ .Release.Name }}-test-role-brain"
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/name: {{ include "kubecf.fullname" . }}
    app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    helm.sh/chart: {{ include "kubecf.chart" . }}
rules:
- apiGroups:
  - ""
  resources:
  - "services"
  verbs:
  - "create"
  - "get"
  - "delete"
  - "list"
  - "patch"
- apiGroups:
  - "extensions"
  resourceNames:
  - "default"
  resources:
  - "podsecuritypolicies"
  verbs:
  - "use"
- apiGroups:
  - "extensions"
  resources:
  - "replicasets"
  verbs:
  - "create"
  - "get"
  - "list"
  - "delete"
  - "update"
- apiGroups:
  - "apps"
  resources:
  - "statefulsets"
  verbs:
  - "create"
  - "get"
  - "update"
  - "delete"
  - "list"
  - "patch"
- apiGroups:
  - ""
  resources:
  - "pods"
  verbs:
  - "create"
  - "get"
  - "list"
  - "delete"
  - "update"
  - "patch"
- apiGroups:
  - ""
  resources:
  - "pods/exec"
  verbs:
  - "create"
  - "delete"
- apiGroups:
  - ""
  resources:
  - "pods/log"
  verbs:
  - "create"
  - "delete"
  - "get"
  - "list"
- apiGroups:
  - ""
  resources:
  - "secrets"
  verbs:
  - "create"
  - "get"
  - "delete"
  - "list"

# Role binding for service account "tests-brain" and role "test-role-brain"
---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "RoleBinding"
metadata:
  name: tests-brain-test-role-brain-binding
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/component: "{{ .Release.Name }}-tests-brain-test-role-brain-binding"
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/name: {{ include "kubecf.fullname" . }}
    app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    helm.sh/chart: {{ include "kubecf.chart" . }}
subjects:
- kind: "ServiceAccount"
  name: tests-brain
  namespace: {{ .Release.Namespace | quote }}
roleRef:
  apiGroup: "rbac.authorization.k8s.io"
  kind: "Role"
  name: test-role-brain

# Cluster role "test-cluster-role" only used by account "tests-brain"
#
# __ATTENTION__: The brain tests do things with the cluster which
# required them to have `cluster-admin` permissions (i.e. root).
# Enabling them is thus potentially insecure. They should only be
# activated for isolated testing.
---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRole"
metadata:
  name: {{ printf "%s-test-cluster-role" .Release.Namespace }}
  labels:
    app.kubernetes.io/component: "{{ .Release.Namespace }}-{{ .Release.Name }}-test-cluster-role"
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/name: {{ include "kubecf.fullname" . }}
    app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    helm.sh/chart: {{ include "kubecf.chart" . }}
rules:
- apiGroups:
  - ""
  resources:
  - "namespaces"
  verbs:
  - "create"
  - "get"
  - "delete"
- apiGroups:
  - ""
  resources:
  - "pods"
  - "pods/log"
  - "namespaces"
  verbs:
  - "get"
  - "list"
  - "watch"
- apiGroups:
  - ""
  resources:
  - "pods/portforward"
  verbs:
  - "create"
- apiGroups:
  - "rbac.authorization.k8s.io"
  resources:
  - "clusterrolebindings"
  verbs:
  - "delete"
- apiGroups:
  - ""
  resources:
  - "persistentvolumes"
  - "persistentvolumeclaims"
  verbs:
  - "get"
  - "list"
- apiGroups:
  - "storage.k8s.io"
  resources:
  - "storageclasses"
  verbs:
  - "get"
  - "list"
- apiGroups:
  - "batch"
  resources:
  - "jobs"
  verbs:
  - "get"
  - "list"

# Cluster role binding for service account "tests-brain" and cluster role "test-cluster-role"
---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRoleBinding"
metadata:
  name: {{ printf "%s-tests-brain-test-cluster-role-cluster-binding" .Release.Namespace }}
  labels:
    app.kubernetes.io/component: "{{ .Release.Namespace }}-{{ .Release.Name }}-tests-brain-test-cluster-role-cluster-binding"
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/name: {{ include "kubecf.fullname" . }}
    app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    helm.sh/chart: {{ include "kubecf.chart" . }}
subjects:
- kind: "ServiceAccount"
  name: tests-brain
  namespace: {{ .Release.Namespace | quote }}
roleRef:
  kind: "ClusterRole"
  apiGroup: "rbac.authorization.k8s.io"
  name: {{ printf "%s-test-cluster-role" .Release.Namespace }}

# Cluster role binding for service account "tests-brain" and cluster role "cluster-admin"
---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRoleBinding"
metadata:
  name: {{ printf "%s-tests-brain-cluster-admin-cluster-binding" .Release.Namespace }}
  labels:
    app.kubernetes.io/component: "{{ .Release.Namespace }}-{{ .Release.Name }}-tests-brain-cluster-admin-cluster-binding"
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/name: {{ include "kubecf.fullname" . }}
    app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    helm.sh/chart: {{ include "kubecf.chart" . }}
subjects:
- kind: "ServiceAccount"
  name: tests-brain
  namespace: {{ .Release.Namespace | quote }}
roleRef:
  kind: "ClusterRole"
  apiGroup: "rbac.authorization.k8s.io"
  name: "cluster-admin"
---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksJob
metadata:
  name: brain-tests
  namespace: {{ .Release.Namespace | quote }}
spec:
  template:
    backoffLimit: 2
    spec:
      template:
        spec:
          serviceAccountName: tests-brain
          containers:
          - command:
            - /bin/run.sh
            image: ghcr.io/cloudfoundry-incubator/brain-tests:test
            name: brain-tests
            env:
              - name: "CF_DOMAIN"
                valueFrom:
                  secretKeyRef:
                    name: var-system-domain
                    key: value
              - name: "CF_TCP_DOMAIN"
                value: "tcp.$(CF_DOMAIN)"
              - name: "NAMESERVER"
                value: {{ printf "apps-dns.%s.svc" .Release.Namespace | quote }}
              - name: "CF_USERNAME"
                value: "admin"
              - name: "CF_PASSWORD"
                valueFrom:
                  secretKeyRef:
                    name: var-cf-admin-password
                    key: password
              - name: "CF_ORG"
                value: "test-brain-org"
              - name: "CF_SPACE"
                value: "test-space-org"
              - name: "KUBERNETES_NAMESPACE"
                value: {{ .Release.Namespace | quote }}
              - name: "KUBERNETES_STORAGE_CLASS_PERSISTENT"
                value: {{ default "" .Values.kube.storage_class | quote }}
              {{- if .Values.features.credhub.enabled }}
              - name: "CREDHUB_CLIENT"
                value: "credhub_admin_client"
              - name: "CREDHUB_SECRET"
                valueFrom:
                  secretKeyRef:
                    name: var-credhub-admin-client-secret
                    key: password
              {{- end }}
              - name: "CREDHUB_ENABLED"
                value: "{{ .Values.features.credhub.enabled }}"
              - name: "CFLOGIN_ENABLED"
                value: "true"
              - name: "PUSHAPP_ENABLED"
                value: "true"
              - name: "SECURITYGROUPS_ENABLED"
                value: "true"
              - name: "DOCKERAPP_ENABLED"
                value: "true"
              - name: "TCPROUTING_ENABLED"
                value: "{{ .Values.features.routing_api.enabled }}"
              - name: "METRON_ENABLED"
                value: "true"
              - name: "SSH_ENABLED"
                value: "true"
              - name: "BUILDPACKS_ENABLED"
                value: "true"
              - name: "BACKUP_ENABLED"
                value: "true"
              - name: "INSECURE_REGISTRY_ENABLED"
                value: "{{ .Values.features.routing_api.enabled }}"
              - name: "NFSPERSI_ENABLED"
                value: "true"
              - name: "EIRINIPERSI_ENABLED"
                value: "{{ .Values.features.eirini.enabled }}"
              - name: "SYSLOG_FORWARDING_ENABLED"
                value: "true"
              - name: "AUTOSCALER_ENABLED"
                value: "{{ .Values.features.autoscaler.enabled }}"
              - name: "APPS_DOMAIN"
                valueFrom:
                  secretKeyRef:
                    name: var-system-domain
                    key: value
              - name: "AUTOSCALER_URL"
                value: "https://autoscaler.$(CF_DOMAIN)"
              - name: "EXCLUDE"
                value: ""
              - name: "IN_ORDER"
                value: "false"
              - name: "INCLUDE"
                value: ""
              - name: "VERBOSE"
                value: "false"
          restartPolicy: Never
          terminationGracePeriodSeconds: 1
  trigger:
    strategy: manual
{{- end }}
