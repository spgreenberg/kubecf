#!/bin/bash

## Given the path to a file generated by `max-memory.sh` it converts
## the data into a yaml file nearly suitable for use as
## `chart/config/memory.yaml`. The yaml is written to stdout.

log="${1}" ; shift

if test -z "${log}"
then
    echo 1>&2 "Usage: $0 log"
    exit 1
fi

# Emit yaml headers
echo "# Specification of the default memory limits for the kubecf instance"
echo "# groups and jobs."
echo "#"
echo '# Syntax: See `chart/values.schema.yaml`'
echo ""
echo "limits:"
echo "  memory:"

# Read the memory requirements and emit the yaml configuration.

lastgroup=""
while read group container memory
do
    if test -z "$group" ; then continue ; fi
    group="${group%-0}"

    # Ignore special pods not handled by cf-deployment itself
    # (bosh-dns, eirini).
    case "${group}" in
	bosh-dns-*|bits-*|eirini-events-*|eirini-metrics-*|eirini-routing-*|eirini-staging-reporter-*|eirini-*|loggregator-bridge-*|persi-broker-*|persi-*|ssh-proxy-*|ssh-*)
	    continue
	    ;;
	*) ;;
    esac

    # Translate container names to job names, ignore the containers
    # representing the one-shot tasks
    case "${container}" in
	tps-watcher) job="tps" ;;
	*-*)
	    # Reduce container names with dashes from FOO-FOO to FOO,
	    # the job name.
	    job="$(echo "$container" | sed -e 's|^\(.*\)-\1$|\1|')"
	    # Container not matching FOO-FOO ? One-shot container! Skip.
	    #if test "$job" = "$container" ; then continue ; fi
	;;
	*)
	    # Container names without a dash are job names.
	    job="$container"
	;;
    esac

    # Ignore the sidecar jobs.
    # TODO, MAYBE : Write to sidecar instance group
    case "${job}" in
	loggregator-agent)     continue ;;
	loggr-forwarder-agent) continue ;;
	loggr-syslog-agent)    continue ;;
	logs)                  continue ;;
	prom-scraper)          continue ;;
	*) ;;
    esac

    # More rewriting of container to job names (dashes to underscores).
    # NOTE: Not all jobs use underscores, some have dashes.
    # TODO: Simplify via bash assoc array variable.
    case "${job}" in
	cc-deployment-updater)         job="cc_deployment_updater" ;;
	cc-uploader)                   job="cc_uploader" ;;
	cloud-controller-clock)        job="cloud_controller_clock" ;;
	cloud-controller-ng)           job="cloud_controller_ng" ;;
	file-server)                   job="file_server" ;;
	loggregator-trafficcontroller) job="loggregator_trafficcontroller" ;;
	reverse-log-proxy)             job="reverse_log_proxy" ;;
	reverse-log-proxy-gateway)     job="reverse_log_proxy_gateway" ;;
	route-emitter)                 job="route_emitter" ;;
	route-registrar)               job="route_registrar" ;;
	ssh-proxy)                     job="ssh_proxy" ;;
	statsd-injector)               job="statsd_injector" ;;
	tcp-router)                    job="tcp_router" ;;
	*)           ;;
    esac
    
    # Emit the yaml for the remaining entries. The condtional emission
    # of group information assumes that the input file is sorted by
    # group.
    
    if test "${group}" != "${lastgroup}"
    then
	echo "    ${group}:"
    fi
    lastgroup="${group}"
    echo "      ${job}: ${memory}"
    
done < "${log}"
exit
